{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","opened","onOpen","todos","onFind","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","value","selectValue","onSelect","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","isLoaded","setIsLoaded","useEffect","fetchTodos","a","userId","href","email","name","App","setTodos","query","setQuery","selectFilter","setSelectFilter","openModal","setOpenModal","setTodo","initialTodos","filter","actualTodo","includes","filterTodos","todoId","foundTodo","find","possibleTodo","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc14d230.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  opened: boolean,\n  onOpen: (val: boolean) => void,\n  todos: Todo[],\n  onFind: (id: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  opened,\n  onOpen,\n  todos,\n  onFind,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\">\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onOpen(!opened);\n                onFind(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={!opened ? 'far fa-eye' : 'far fa-eye-slash'} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  value: string,\n  selectValue: string,\n  onChange: (newValue: string) => void,\n  onSelect: (newValue: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  selectValue,\n  onSelect = () => { },\n  onChange = () => { },\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={event => onSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={event => onChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChange('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  onOpen: (val: boolean) => void,\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ onOpen, todo }) => {\n  const [user, setUser] = useState<User>();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setUser(await getUser(todo.userId));\n      setIsLoaded(!isLoaded);\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onOpen(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user && user.email}`}>\n                {user && (user.name)}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './components/App.scss';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectFilter, setSelectFilter] = useState('all');\n  const [openModal, setOpenModal] = useState(false);\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setTodos(await getTodos());\n      setIsLoaded(!isLoaded);\n    };\n\n    fetchTodos();\n  }, []);\n\n  const filterTodos = (initialTodos: Todo[]) => {\n    switch (selectFilter) {\n      case 'all':\n        return initialTodos.filter(actualTodo => actualTodo.title.includes(query));\n      case 'completed':\n        return initialTodos.filter(actualTodo => actualTodo.title.includes(query) && actualTodo.completed);\n      case 'active':\n        return initialTodos.filter(actualTodo => actualTodo.title.includes(query) && !actualTodo.completed);\n      default:\n        return initialTodos;\n    }\n  };\n\n  const findTodo = (todoId: number) => {\n    const foundTodo = todos.find(possibleTodo => todoId === possibleTodo.id);\n\n    if (foundTodo !== undefined) {\n      setTodo(foundTodo);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter value={query} selectValue={selectFilter} onSelect={setSelectFilter} onChange={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded ? <Loader /> : ''}\n              {isLoaded && (<TodoList opened={openModal} onOpen={setOpenModal} todos={filterTodos(todos)} onFind={findTodo} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {(openModal && todo) && (<TodoModal onOpen={setOpenModal} todo={todo} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}